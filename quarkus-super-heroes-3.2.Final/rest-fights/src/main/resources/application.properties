quarkus.application.name=rest-fights

## HTTP configuration
quarkus.http.port=8082
quarkus.jackson.serialization-inclusion=non-empty
quarkus.http.test-port=0

## Mongo
quarkus.mongodb.metrics.enabled=true
quarkus.mongodb.database=fights

## Liquibase Mongo
quarkus.liquibase-mongodb.migrate-at-start=true

## CORS
quarkus.http.cors=true
quarkus.http.cors.origins=*

## Rest client
quarkus.rest-client.hero-client.url=stork://hero-service
%test.org.eclipse.microprofile.rest.client.propagateHeaders=x-propagate

## Stork
quarkus.stork.hero-service.service-discovery.type=static
quarkus.stork.hero-service.service-discovery.address-list=localhost:8083
quarkus.stork.villain-service.service-discovery.type=static
quarkus.stork.villain-service.service-discovery.address-list=localhost:8084

## Fight configuration
fight.hero.fallback.name=Fallback hero
fight.hero.fallback.picture=https://dummyimage.com/280x380/1e8fff/ffffff&text=Fallback+Hero
fight.hero.fallback.powers=Fallback hero powers
fight.hero.fallback.level=1
fight.villain.client-base-url=stork://villain-service
fight.villain.fallback.name=Fallback villain
fight.villain.fallback.picture=https://dummyimage.com/280x380/b22222/ffffff&text=Fallback+Villain
fight.villain.fallback.powers=Fallback villain powers
fight.villain.fallback.level=45

## Kafka configuration
mp.messaging.outgoing.fights.connector=smallrye-kafka
mp.messaging.outgoing.fights.topic=fights
mp.messaging.outgoing.fights.apicurio.registry.auto-register=true
%test.mp.messaging.outgoing.fights.connector=smallrye-in-memory
%test.mp.messaging.outgoing.fights.merge=true

## Logging configuration
quarkus.log.category."io.quarkus.sample.superheroes".level=DEBUG
quarkus.log.level=INFO
%dev.quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
%test.quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO
%dev.quarkus.log.console.level=DEBUG
%test.quarkus.log.console.level=DEBUG

# OpenTelemetry
quarkus.otel.resource.attributes=app=${quarkus.application.name},application=fights-service,system=quarkus-super-heroes
quarkus.otel.exporter.otlp.traces.endpoint=http://localhost:4317

# OpenAPI
quarkus.smallrye-openapi.info-title=Fights API
quarkus.smallrye-openapi.info-description=This API performs fights between a Hero and a Villain
quarkus.smallrye-openapi.info-version=1.0
quarkus.smallrye-openapi.info-contact-name=Quarkus
quarkus.smallrye-openapi.info-contact-url=https://github.com/quarkusio
quarkus.swagger-ui.always-include=true

# Container image
quarkus.container-image.builder=docker
quarkus.container-image.registry=quay.io
quarkus.container-image.group=quarkus-super-heroes
quarkus.container-image.name=${quarkus.application.name}

# Kubernetes
quarkus.kubernetes-client.generate-rbac=false
%kubernetes.quarkus.config.profile.parent=prod
%kubernetes.quarkus.kubernetes.deployment-target=kubernetes
quarkus.kubernetes.part-of=fights-service
quarkus.kubernetes.externalize-init=false
quarkus.kubernetes.env.configmaps=${quarkus.application.name}-config
quarkus.kubernetes.env.secrets=${quarkus.application.name}-config-creds
quarkus.kubernetes.annotations."app.openshift.io/connects-to"=fights-db,fights-kafka,apicurio,rest-villains,rest-heroes,otel-collector
quarkus.kubernetes.labels.app=${quarkus.application.name}
quarkus.kubernetes.labels.application=${quarkus.kubernetes.part-of}
quarkus.kubernetes.labels.system=quarkus-super-heroes

# OpenShift
%openshift.quarkus.config.profile.parent=prod
%openshift.quarkus.kubernetes.deployment-target=openshift
%openshift.quarkus.container-image.builder=openshift
quarkus.openshift.base-jvm-image=registry.access.redhat.com/ubi9/openjdk-17:1.14
quarkus.openshift.base-native-image=quay.io/quarkus/ubi-quarkus-native-binary-s2i:2.0
quarkus.openshift.externalize-init=false
quarkus.openshift.part-of=${quarkus.kubernetes.part-of}
quarkus.openshift.route.expose=true
quarkus.openshift.annotations."app.openshift.io/connects-to"=fights-db,fights-kafka,apicurio,rest-villains,rest-heroes,otel-collector
quarkus.openshift.env.configmaps=${quarkus.kubernetes.env.configmaps}
quarkus.openshift.env.secrets=${quarkus.kubernetes.env.secrets}
quarkus.openshift.labels.app=${quarkus.kubernetes.labels.app}
quarkus.openshift.labels.application=${quarkus.kubernetes.labels.application}
quarkus.openshift.labels.system=${quarkus.kubernetes.labels.system}

# KNative
%knative.quarkus.config.profile.parent=prod
%knative.quarkus.kubernetes.deployment-target=knative
quarkus.knative.min-scale=1
quarkus.knative.part-of=${quarkus.kubernetes.part-of}
quarkus.knative.annotations."app.openshift.io/connects-to"=fights-db,fights-kafka,apicurio,rest-villains,rest-heroes,otel-collector
quarkus.knative.env.configmaps=${quarkus.kubernetes.env.configmaps}
quarkus.knative.env.secrets=${quarkus.kubernetes.env.secrets}
quarkus.knative.labels.app=${quarkus.kubernetes.labels.app}
quarkus.knative.labels.application=${quarkus.kubernetes.labels.application}
quarkus.knative.labels.system=${quarkus.kubernetes.labels.system}

# KNative on OpenShift
%knative-openshift.quarkus.config.profile.parent=knative
%knative-openshift.quarkus.container-image.builder=openshift

# Minikube
%minikube.quarkus.config.profile.parent=prod
%minikube.quarkus.kubernetes.deployment-target=minikube
%minikube-17.quarkus.config.profile.parent=minikube
